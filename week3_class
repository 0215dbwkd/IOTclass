InfluxDB란?
	시계열(Time-Series) 데이터베이스(TSDB, Time-Series Database), 
	시간에 따라 변화하는 데이터를 효과적으로 저장하고 관리하는 데 최적화된 데이터베이스다.

InfluxDB 주요 특징
1. 시계열 데이터 저장
	센서 데이터, 주식 가격, 서버 로그, 네트워크 모니터링 데이터 등 "시간과 함께 변화하는 데이터를" 저장하는 데 특화됨.
	timestamp(시간 정보)가 자동으로 추가됨.

2.고속 데이터 삽입 및 검색 ( ex) IOT )
	INSERT 속도가 빠르며, SELECT 시 시간 범위를 지정하여 빠르게 데이터를 검색할 수 있음.
	"5분 동안의 평균 온도" 같은 집계 연산 가능

3.SQL과 비슷한 질의(Query) 언어 지원
	InfluxQL, Flux 같은 언어를 제공하여 SQL과 유사한 방식으로 데이터를 조회할 수 있음.
	예제)
		SELECT temperature FROM sensor_data WHERE time > now() - 1h;
		->지난 1시간 동안의 온도 데이터 조회

4.태그(Tag) 기반 데이터 저장
	센서나 기기의 데이터를 저장할 때 태그(Tag)를 사용하면 검색 속도가 빨라짐.
	예제 데이터 구조:
		measurement: "sensor_data"
		tags: { "device" : "arduino", "location": "room1" }
		fields: { "temperature": 25.3}
		timestamp: 2025-03-17T12:00:00Z

Measurement : 테이블과 유사한 개념 (예: "sensor_data")
Tag (별칭): 빠른 검색을 위한 메타데이터 (예:"


window powershell
>눌러서 무조건 관리자로 실행

cd .. -> 한 단계 뒤로 가는 거
ls -> 폴더랑 파일 리스트 보는 거
pro 정도 누르고 텝 누르면  '.\Program Files\' 이게 뜨거나 유사한 파일이 뜰 수 있음
	텝을 연속으로 누르면  pro로 시작하는 것들이 나온다
cd c:\누르면 그냥 c드라이브로 나감
./

localhost 자기자신
localhost:8086
http://localhost:8086/onboarding/0 여기에 들어감

Username : root로 통일
Password : rootroot
initial Organization Name : test
initial bucket name : dust




PS C:\> cd '.\Program Files\'
PS C:\Program Files> cd .\InfluxData\
PS C:\Program Files\InfluxData> cd .\influxdb\
PS C:\Program Files\InfluxData\influxdb>       파일 경로 들어가는 거

PS C:\Program Files\InfluxData\influxdb> cd c:\  c드라이브로 나간다
PS C:\> cd '.\Program Files\InfluxData\influxdb\'


데이터를 전압으로 표시함

DataSheet(GP2Y1010AU0F)
-센서 중앙 홀을 통해 공기 중에 먼지량을 측정
-원형 구멍 양 옆으로 두 개의 소자가 부착됨(적외선 LED, 적외선 수신소자)

-적외선 LED 작동방법
-LED On/Off 총 10ms,(0.32ms
	LES ON, 9.68ms LED OFF), 반복

-데이터 수신
-적외선 LED 켠 후 0.28ms 흐르고 적외선 수신기를 작동시켜 값을 Read)


미세먼지 농도 확인하는 아두이노 코드
int Vo = A0;
int V_LED = 2;

float Vo_value=0; 
float Voltage = 0;
float dustDensity = 0;

void setup(){
  Serial.begin(9600);
  pinMode(V_LED, OUTPUT);
  pinMode(Vo, INPUT);
}

void loop()
{
  digitalWrite(V_LED,LOW);
  delayMicroseconds(280);
  Vo_value = analogRead(Vo);
  delayMicroseconds(40);
  digitalWrite(V_LED,HIGH);
  delayMicroseconds(9600);

  Voltage = Vo_value*5.0 / 1023.0;
  dustDensity = (Voltage - 0.5)/0.005;

  Serial.print("dust = ");
  Serial.println(dustDensity);

  delay(1000);
}


pip3 install influxdb-client
pip3 install influxdb
pip3 install pyserial




phython IDLE에서 한 거
from influxdb_client import InfluxDBClient
import time
import serial
# === InfluxDB 2.x 설정===
influxdb_url = "http://localhost:8086" #기본 URL
influxdb_token = "YvtQLt7-BUkhrzxu4ELTzfn5C8QcD5T3k3iJE9sTOL7elZ575rsDIwsinslo4Y9P7d9RVVbdxZfKgaG1n0Oo1w==" #TODO
influxdb_org = "test" #InfluxDB에서 설정한 조직 이름
influxdb_bucket = "dust" # 데이터가 저장될 버킷 이름

# === (1) Arduino 시리얼 포트 설정 ===
serial_port = "COM4" # 아두이노 포트 (Windows 기준)
baudrate = 9600 # 시리얼 통신 속도
timeout = 2 # 타임아웃 (초)

# InfluxDB 2.0 클라이언트 생성
client = InfluxDBClient(url=influxdb_url, token=influxdb_token, org=influxdb_org)

# === (3) InfluxDB 클라이언트 설정 ===
write_api = client.write_api()

# === (4) 시리얼 포트 열기 ===
try:
    ser = serial.Serial(serial_port, baudrate, timeout=timeout)
    print(f"Connected to {serial_port} at {baudrate} baud")
except serial.SerialException:
    print("Failed to connect to serial port.")
    exit()

#=== (5) 시리얼 데이터 읽기 및 InfluxDB 저장 ===
try:
    while True:
        if ser.in_waiting > 0:
            line = ser.readline().decode('utf-8').strip() # 시리얼 데이터
            print(f"Received: {line}")

            # 데이터가 "temperature=25.3" 같은 형식이라고 가정
            if "=" in line:
                key,value = line.split("=")
                try:
                    value = float(value) # 숫자로 변환
                    # InfluxDB 2.x 데이터 포맷
                    data = f"sensor_data,device=arduino {key}={value}"
                    write_api.write(bucket=influxdb_bucket, record=data)
                    print(f"Data written to InfluxDB: {key}={value}")

                except ValueError:
                    print("Invalid data format")

        time.sleep(1) # 1초 대기

except KeyboardInterrupt:
    print("Stopping data collection...")

finally:
    ser.close()

Python 3.12.5 (tags/v3.12.5:ff3bc82, Aug  6 2024, 20:45:27) [MSC v.1940 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.

= RESTART: C:/Users/User/OneDrive/Desktop/dust.py
Connected to COM4 at 9600 baud
Received: dust = -29.62
Data written to InfluxDB: dust =-29.62
Received: dust = 18.28
Data written to InfluxDB: dust =18.28
Received: dust = 12.41
Data written to InfluxDB: dust =12.41
Received: dust = 21.21
Data written to InfluxDB: dust =21.21
Received: dust = 11.44
Data written to InfluxDB: dust =11.44
Received: dust = 4.59
Data written to InfluxDB: dust =4.59
The retriable error occurred during request. Reason: '<urllib3.connection.HTTPConnection object at 0x00000178AA664680>: Failed to establish a new connection: [WinError 10061] 대상 컴퓨터에서 연결을 거부했으므로 연결하지 못했습니다'.
Received: dust = 12.41
Data written to InfluxDB: dust =12.41
Received: dust = 3.62
Data written to InfluxDB: dust =3.62
Received: dust = -0.29
 -> 결과화면
